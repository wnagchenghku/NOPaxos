# Redis Protocol specification
Redis clients communicate with the Redis server using a protocol called **RESP** (REdis Serialization Protocol).

## RESP protocol description

The way RESP is used in Redis as a request-response protocol is the following:

- Clients send commands to a Redis server as a RESP Array of Bulk Strings.
- The server replies with one of the RESP types according to the command implementation.

In RESP, the type of some data depends on the first byte:

- For **Simple Strings** the first byte of the reply is "+"
- For **Errors** the first byte of the reply is "-"
- For **Integers** the first byte of the reply is ":"
- For **Bulk Strings** the first byte of the reply is "$"
- For **Arrays** the first byte of the reply is "*"

## RESP Simple Strings

Simple Strings are encoded in the following way: a plus character, followed by a string that cannot contain a CR or LF character (no newlines are allowed), terminated by CRLF (that is "\r\n").

Simple Strings are used to transmit non binary safe strings with minimal overhead. For example many Redis commands reply with just "OK" on success, that as a RESP Simple String is encoded with the following 5 bytes:

```
"+OK\r\n"
```

## RESP Arrays
Clients send commands to the Redis server using RESP Arrays.

RESP Arrays are sent using the following format:

- A * character as the first byte, followed by the number of elements in the array as a decimal number, followed by CRLF.
- An additional RESP type for every element of the Array.

So an empty Array is just the following:
```
"*0\r\n"
```
While an array of two RESP Bulk Strings "foo" and "bar" is encoded as:
```
"*2\r\n$3\r\nfoo\r\n$3\r\nbar\r\n"
```
